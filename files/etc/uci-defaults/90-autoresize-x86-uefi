#!/bin/sh

# UCI-Defaults 脚本：x86 UEFI SquashFS 固件自动扩展 Overlay 分区
# 确保 fdisk, resize2fs, blkid 已经被编译进固件

echo "--- 正在启动 x86 UEFI 根分区自动扩展程序 ---"

ROOT_DEV_NAME="sda"
ROOT_PART_NUM=2
ROOT_DISK="/dev/${ROOT_DEV_NAME}"
ROOT_PART="/dev/${ROOT_DEV_NAME}${ROOT_PART_NUM}"
GRUB_CFG="/boot/grub/grub.cfg"

# 1. 预检查
if [ ! -b "${ROOT_PART}" ] || [ ! -f "${GRUB_CFG}" ]; then
    echo "错误：根分区 (${ROOT_PART}) 或 GRUB 配置 (${GRUB_CFG}) 不存在，退出。"
    exit 1
fi

# 2. 捕获旧的 PARTUUID
OLD_PARTUUID=$(blkid -s PARTUUID -o value ${ROOT_PART})

if [ -z "$OLD_PARTUUID" ]; then
    echo "警告：无法获取旧的 PARTUUID。分区操作可能导致引导失败。"
fi

echo "旧 PARTUUID: ${OLD_PARTUUID}"

# 3. **分区操作：删除旧分区并创建新的、更大的分区**
# 关键：通过 fdisk 无交互式操作，保持起始扇区不变，结束扇区使用默认（即磁盘末尾）。
echo "执行 fdisk 分区调整..."
(
    echo d                # d: 删除分区
    echo ${ROOT_PART_NUM}
    echo n                # n: 创建新分区
    echo p                # p: 选择主分区 (默认)
    echo ${ROOT_PART_NUM} # 指定分区号 2
    
    # 保持起始扇区不变 (回车使用默认值)
    echo ""
    
    # 默认使用所有剩余空间作为结束扇区 (回车使用默认值)
    echo ""
    
    echo w                # w: 写入分区表并退出
) | fdisk ${ROOT_DISK}

if [ $? -ne 0 ]; then
    echo "fdisk 分区操作失败，请手动检查分区表。"
    exit 1
fi

echo "分区表已更新。等待内核识别新分区..."

# 4. **重新加载分区表并捕获新的 PARTUUID**
partprobe ${ROOT_DISK} 2>/dev/null
blockdev --rereadpt ${ROOT_DISK} 2>/dev/null
sleep 5 # 留出时间给内核处理

NEW_PARTUUID=$(blkid -s PARTUUID -o value ${ROOT_PART})

if [ -z "$NEW_PARTUUID" ]; then
    echo "错误：无法获取新的 PARTUUID，无法更新 GRUB 配置。"
    exit 1
fi

echo "新 PARTUUID: ${NEW_PARTUUID}"

# 5. **更新 GRUB 配置以确保 UEFI 引导**
if [ "$OLD_PARTUUID" != "$NEW_PARTUUID" ]; then
    echo "PARTUUID 已变更，正在更新 ${GRUB_CFG}..."
    
    # 替换 grub.cfg 中的所有旧 PARTUUID 引用
    sed -i "s/PARTUUID=\"${OLD_PARTUUID}\"/PARTUUID=\"${NEW_PARTUUID}\"/g" ${GRUB_CFG}
    
    if [ $? -ne 0 ]; then
        echo "更新 ${GRUB_CFG} 失败。可能导致启动问题。"
        exit 1
    else
        echo "${GRUB_CFG} 已成功更新。"
    fi
else
    echo "PARTUUID 未改变，跳过 GRUB 配置更新。"
fi

# 6. **文件系统调整 (Resize2FS)**
# 确保 /dev/sda2 上的 Ext4/Overlay 文件系统扩展
echo "正在调整 Ext4 文件系统大小..."
resize2fs ${ROOT_PART}

if [ $? -ne 0 ]; then
    echo "resize2fs 失败。请确保 ${ROOT_PART} 是 Ext4 文件系统。"
    # 如果您确定是 F2FS，可以添加 f2fs_resize 逻辑
    exit 1
fi

echo "✅ 根文件系统 Overlay 扩展完成！"

# 成功退出，uci-defaults 会自动删除此脚本
exit 0
